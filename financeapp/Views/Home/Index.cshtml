@using financeapp.Models.ViewModels;
@model DashboardViewModel

<section class="grid px-5 gap-8 sm:px-10 lg:grid-rows-1 lg:grid-cols-3">
  <div class="flex flex-col gap-8 lg:col-span-2">

    <partial name="_PieCharts"></partial>

    <div class="grid gap-8 grow md:grid-cols-2">
      <partial name="_TopCategories" model="@Model"></partial>
      <partial name="_Savings" model="@Model.Savings"></partial>
    </div>

  </div>

  <div class="w-full space-y-4">
    <div class="space-y-2">
      <button id="add_expense_btn" class="w-full bg-gradient-to-r from-primary to-purple-800 py-2 px-4 rounded-xl
        motion-safe:transition-all hover:brightness-125">Add a new expense</button>
      <button id="add_income_btn" class="w-full py-2 px-4 rounded-xl outline outline-1 outline-stone-700
        motion-safe:transition-all hover:bg-stone-700">Add a new income</button>
    </div>
    <div id="finances"></div>
  </div>

</section>

@await Html.PartialAsync("_AddExpense", new financeapp.Models.ViewModels.NewExpenseViewModel(Model.Context))

@section Scripts {
<script src="~/js/dashboard.js" type="module" defer></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/piechart.js" type="module" defer></script>
}

<style>
  #finances>div {
    scrollbar-color: currentColor transparent;
    scrollbar-width: thin;
  }
</style>
