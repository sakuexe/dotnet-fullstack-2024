@using financeapp.Models.ViewModels
@model NewExpenseViewModel

<div id="add_expense" class="fixed w-screen h-screen top-0 left-0 hidden
  backdrop-brightness-50">
  <form asp-controller="Finances" asp-action="Add" method="post"
    class="fixed inset-0 m-auto bg-stone-800 px-4 py-8 rounded-xl shadow-lg w-full max-w-lg h-max
    flex-col justify-center items-center gap-2 flex text-stone-100 z-50 outline outline-1 outline-stone-700
    [&>input]:py-2 [&>input]:px-4 [&>input]:border [&>input]:border-stone-700 [&>input]:w-full [&>input]:bg-transparent [&>input]:rounded-md">
    <input type="text" asp-for="Title" placeholder="Title">
    <input type="text" asp-for="Description" placeholder="Description">

    <select onchange="this.nextElementSibling.value = this.value"
      class="py-2 px-4 border border-stone-700 w-full bg-transparent rounded-md text-stone-300">
      <option value="0">Select a category</option>
      @foreach (var category in Model.GetCategories(User.Identity!.Name))
      {
        <option value="@category.Key" data-icon="@category.Value">@category.Value | @category.Key</option>
      }
    </select>

    <input type="text" asp-for="Category" placeholder="... Or write a new category">
    <input type="text" asp-for="Icon" placeholder="Icon">
    <input type="text" asp-for="Amount" name="Amount">
    <input type="checkbox" asp-for="IsExpense" name="IsExpense" hidden checked>

    <hr class="my-2 w-full border-current opacity-25"/>

    <button type="submit" class="w-full py-2 px-4 rounded-md bg-gradient-to-r from-primary to-purple-800
      motion-safe:transition-all hover:brightness-125">Add a new expense</button>
    <button type="reset" class="w-full border border-stone-700 py-2 px-4 rounded-md 
      motion-safe:transition-all hover:bg-stone-700">Clear</button>
    <div class="error"></div>
  </form>
</div>

<script>
const categorySelection = document.querySelector('#add_expense select');
categorySelection.addEventListener('change', (e) => {
  const categoryInput = categorySelection.nextElementSibling;
  const iconInput = categoryInput.nextElementSibling;
  categoryInput.value = e.target.value;
  iconInput.value = e.target.selectedOptions[0].dataset.icon;
});
</script>
