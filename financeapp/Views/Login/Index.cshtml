@using financeapp.Models.ViewModels
@model LoginViewModel

<section class="max-w-lg mx-auto space-y-2">
  <h1 class="font-bold text-2xl">Login</h1>
  <form asp-controller="Login" asp-action="Index" method="post"
    class="outline outline-2 outline-stone-700 bg-stone-800 px-4 py-6 rounded-xl
    space-y-4 [&_input]:bg-transparent [&_input]:border-stone-700">
    <div class="flex flex-col">
      <label asp-for="Username" class="font-bold">Username</label>
      <input asp-for="Username" placeholder="coolguy123" class="border-2 rounded-md py-2 px-4" />
      <span asp-validation-for="Username" class="px-4 py-1 mt-2 bg-gradient-to-r from-primary to-purple-600 rounded-md"></span>
    </div>

    <div class="flex flex-col">
      <label asp-for="Password" class="font-bold">Password</label>
      <div class="flex">
        <input asp-for="Password" placeholder="********" class="border-2 rounded-l-md py-2 px-4 grow" />
        <button type="button" class="show-password w-max bg-stone-700 rounded-r-md px-2">Show 👀</button>
      </div>
      <span asp-validation-for="Password" class="px-4 py-1 mt-2 bg-gradient-to-r from-primary to-purple-600 rounded-md"></span>
    </div>

    <span class="text-red-400">@Html.ValidationMessage("validation")</span>
    <hr class="border-stone-600">

    <div class="grid grid-rows-2 gap-2">
      <button type="submit" class="py-2 px-4 bg-gradient-to-r from-primary to-purple-600 rounded-md
        motion-safe:transition-all hover:brightness-125">Login</button>
      <button type="reset" class="py-2 px-4 border-stone-600 border rounded-md
        motion-safe:transition-all hover:bg-stone-600">Clear</button>
    </div>
  </form>

  <p>No account?</p>
  <a asp-controller="Login" asp-action="Register" class="text-primary-500">Create a new account</a>
</section>

@section Scripts {
<script defer>
  const passwordFields = document.querySelectorAll('input[type="password"]');
  const showPasswordButtons = document.querySelectorAll('button.show-password');
  function showPassword(field) {
    // toggle between text and password types
    field.type = field.type === 'password' ? 'text' : 'password';
    const showBtn = field.nextElementSibling;
    showBtn.textContent = field.type === 'password' ? 'Show 👀' : 'Hide 🕶️';
  }
  showPasswordButtons.forEach((button, index) => {
    const currentField = button.previousElementSibling;
    button.addEventListener('click', () => showPassword(currentField));
  });
</script>
}
