@model List<workorder.Models.WorkOrderViewModel>

@{
ViewData["Title"] = "Work Order page";
}

@section Scripts {
<script defer>
  const preloadColors = ["bg-luonnos", "bg-hylatty", "bg-laskutettu", "bg-odottaa", "bg-kuitattu"];
  const ids = document.querySelectorAll("span.work_id, span.customer_id");
  const descriptions = document.querySelectorAll("div.description");

  // copy to clipboard
  function copyToClipboard(target) {
    // copy the text content of the target element to clipboard
    // so that IDs can be easily copied
    const originalText = event.target.textContent;
    navigator.clipboard.writeText(originalText);
    target.classList.toggle("underline");
    target.textContent = "Kopioitu!";
    setTimeout(() => {
      target.textContent = originalText;
      target.classList.toggle("underline");
    }, 1000);
  }

  for (const id of ids) {
    id.addEventListener("click", (event) => copyToClipboard(event.target));
  }

  // readme buttons
  function checkForOverflow(ptag) {
    return ptag.scrollHeight > ptag.clientHeight;
  }

  for (const description of descriptions) {
    const ptag = description.querySelector(".content > p");
    if (!checkForOverflow(ptag)) {
      continue
    }
    const button = description.querySelector("button");
    button.classList.remove("hidden");
    button.addEventListener("click", () => {
      ptag.classList.toggle("line-clamp-2");
      ptag.classList.toggle("line-clamp-none");
    });
  }
  // warnings
  const warnings = document.querySelectorAll("div.warning");
  for (const warning of warnings) {
    const closeButton = warning.querySelector("button:not(.workers-btn)");
    closeButton.addEventListener("click", () => {
      warning.previousElementSibling.classList.remove("opacity-50");
      warning.previousElementSibling.previousElementSibling.classList.remove("opacity-50");
      warning.classList.add("hidden");
    });
  }
</script>
<script src="~/js/modals.js" defer></script>
}

<section class="space-y-6 py-20 print:py-6 print:space-y-2">
  @foreach (var workOrder in Model)
  {
  <partial name="_WorkOrder" model="workOrder" />
  }
</section>
<partial name="_WorkerModal" />

